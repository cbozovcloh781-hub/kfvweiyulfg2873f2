-- Кастомная система ключей
local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")

-- Параметр ключа (несколько способов получения)
local key = ... or _G.SCRIPT_KEY or getgenv().SCRIPT_KEY or "" -- Ключ из разных источников

-- Глобальная переменная для остановки всех процессов
local ScriptDestroyed = false

-- Кэш ключей
local keysCache = ""
local lastUpdate = 0
local autoUpdateConnection = nil

-- Функция получения HWID
local function getHWID()
    local hwid = ""
    if gethwid then
        hwid = gethwid()
    elseif syn and syn.request then
        hwid = game:GetService("RbxAnalyticsService"):GetClientId()
    else
        local player = Players.LocalPlayer
        hwid = tostring(player.UserId) .. "_" .. tostring(game.JobId):sub(1, 8)
    end
    return hwid
end

-- ID игр
local gameIds = {
    yba = 2809202155,
    ["99_nights"] = 8888615802,
    blade_ball = 13772394625,
}

local currentGameId = game.PlaceId
local currentGame = nil

for gameName, gameId in pairs(gameIds) do
    if currentGameId == gameId then
        currentGame = gameName
        break
    end
end

if not currentGame then
    currentGame = "unsupported"
end

-- Проверяем ключ при запуске
if key and key ~= "" then
    spawn(function()
        wait(1) -- Ждем загрузки
        local hwid = getHWID()
        loadKeys()
        loadKeysDatabase()
        wait(0.5)
        
        if checkKey(key) then
            return -- Ключ валиден, скрипт продолжает работу
        end
    end)
end

-- Удаляем старую кей систему если есть
local existingGui = Players.LocalPlayer.PlayerGui:FindFirstChild("KeySystem")
if existingGui then
    existingGui:Destroy()
end

-- Создаем GUI
local ScreenGui = Instance.new("ScreenGui")
local MainFrame = Instance.new("Frame")
local Title = Instance.new("TextLabel")
local KeyInput = Instance.new("TextBox")
local SubmitButton = Instance.new("TextButton")
local StatusLabel = Instance.new("TextLabel")
local CloseButton = Instance.new("TextButton")

ScreenGui.Name = "KeySystem"
ScreenGui.Parent = Players.LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
ScreenGui.ResetOnSpawn = false

MainFrame.Name = "MainFrame"
MainFrame.Parent = ScreenGui
MainFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
MainFrame.BorderSizePixel = 0
MainFrame.Position = UDim2.new(0.5, -200, 0.5, -150)
MainFrame.Size = UDim2.new(0, 400, 0, 300)
MainFrame.Active = true
MainFrame.Draggable = true

local Corner = Instance.new("UICorner")
Corner.CornerRadius = UDim.new(0, 12)
Corner.Parent = MainFrame

Title.Name = "Title"
Title.Parent = MainFrame
Title.BackgroundTransparency = 1
Title.Position = UDim2.new(0, 0, 0, 20)
Title.Size = UDim2.new(1, 0, 0, 40)
Title.Font = Enum.Font.GothamBold
Title.Text = "KEY SYSTEM"
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.TextSize = 24

KeyInput.Name = "KeyInput"
KeyInput.Parent = MainFrame
KeyInput.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
KeyInput.BorderSizePixel = 0
KeyInput.Position = UDim2.new(0.1, 0, 0.35, 0)
KeyInput.Size = UDim2.new(0.8, 0, 0, 40)
KeyInput.Font = Enum.Font.Gotham
KeyInput.PlaceholderText = "Enter key..."
KeyInput.Text = ""
KeyInput.TextColor3 = Color3.fromRGB(255, 255, 255)
KeyInput.TextSize = 16

local InputCorner = Instance.new("UICorner")
InputCorner.CornerRadius = UDim.new(0, 8)
InputCorner.Parent = KeyInput

SubmitButton.Name = "SubmitButton"
SubmitButton.Parent = MainFrame
SubmitButton.BackgroundColor3 = Color3.fromRGB(0, 162, 255)
SubmitButton.BorderSizePixel = 0
SubmitButton.Position = UDim2.new(0.1, 0, 0.55, 0)
SubmitButton.Size = UDim2.new(0.8, 0, 0, 40)
SubmitButton.Font = Enum.Font.GothamBold
SubmitButton.Text = "Check Key"
SubmitButton.TextColor3 = Color3.fromRGB(255, 255, 255)
SubmitButton.TextSize = 16

local ButtonCorner = Instance.new("UICorner")
ButtonCorner.CornerRadius = UDim.new(0, 8)
ButtonCorner.Parent = SubmitButton

local GetKeyButton = Instance.new("TextButton")
GetKeyButton.Name = "GetKeyButton"
GetKeyButton.Parent = MainFrame
GetKeyButton.BackgroundColor3 = Color3.fromRGB(40, 167, 69)
GetKeyButton.BorderSizePixel = 0
GetKeyButton.Position = UDim2.new(0.1, 0, 0.75, 0)
GetKeyButton.Size = UDim2.new(0.8, 0, 0, 35)
GetKeyButton.Font = Enum.Font.GothamBold
GetKeyButton.Text = "Get Key"
GetKeyButton.TextColor3 = Color3.fromRGB(255, 255, 255)
GetKeyButton.TextSize = 14

local GetKeyCorner = Instance.new("UICorner")
GetKeyCorner.CornerRadius = UDim.new(0, 8)
GetKeyCorner.Parent = GetKeyButton

StatusLabel.Name = "StatusLabel"
StatusLabel.Parent = MainFrame
StatusLabel.BackgroundTransparency = 1
StatusLabel.Position = UDim2.new(0, 0, 0.88, 0)
StatusLabel.Size = UDim2.new(1, 0, 0, 25)
StatusLabel.Font = Enum.Font.Gotham
StatusLabel.Text = ""
StatusLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
StatusLabel.TextSize = 12

CloseButton.Name = "CloseButton"
CloseButton.Parent = MainFrame
CloseButton.BackgroundColor3 = Color3.fromRGB(255, 60, 60)
CloseButton.BorderSizePixel = 0
CloseButton.Position = UDim2.new(1, -35, 0, 10)
CloseButton.Size = UDim2.new(0, 25, 0, 25)
CloseButton.Font = Enum.Font.GothamBold
CloseButton.Text = "×"
CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CloseButton.TextSize = 18

local CloseCorner = Instance.new("UICorner")
CloseCorner.CornerRadius = UDim.new(0, 12)
CloseCorner.Parent = CloseButton

local function loadKeys()
    if ScriptDestroyed then return end
    local success, result = pcall(function()
        return game:HttpGet("https://asdkfnjkhzxoiuiou34341.github.io/iufagdlldbfbildusfaidufb_keys/keys.txt")
    end)
    if success and result and result ~= "" then
        keysCache = result
        lastUpdate = tick()
    end
end

local keysDatabase = {}
local function loadKeysDatabase()
    if ScriptDestroyed then return end
    local success, result = pcall(function()
        return game:HttpGet("https://asdkfnjkhzxoiuiou34341.github.io/iufagdlldbfbildusfaidufb_keys/keys_db.json")
    end)
    if success and result and result ~= "" then
        local parseSuccess, parsedData = pcall(function()
            return HttpService:JSONDecode(result)
        end)
        if parseSuccess then
            keysDatabase = parsedData
        end
    end
end

-- Функция автоматического обновления ключей
local function startAutoUpdate()
    if autoUpdateConnection then
        autoUpdateConnection:Disconnect()
    end
    
    autoUpdateConnection = RunService.Heartbeat:Connect(function()
        if ScriptDestroyed then
            if autoUpdateConnection then
                autoUpdateConnection:Disconnect()
            end
            return
        end
        
        local currentTime = tick()
        if currentTime - lastUpdate >= 1 then -- Обновляем каждую секунду
            spawn(function()
                loadKeys()
                loadKeysDatabase()
            end)
        end
    end)
end

local function directValidation(key, hwid)
    if not request then return false end
    

    local success, response = pcall(function()
        return request({
            Url = "http://localhost:10000/bind_hwid",
            Method = "POST",
            Headers = {["Content-Type"] = "application/json"},
            Body = HttpService:JSONEncode({
                key = key,
                hwid = hwid
            })
        })
    end)
    
    if success and response then

        
        -- Парсим ответ от бота
        local parseSuccess, responseData = pcall(function()
            return HttpService:JSONDecode(response.Body)
        end)
        
        if parseSuccess and responseData then

            return responseData.status == "success"
        end
    else

    end
    
    return false
end

local activeChecks = {}
local lastCheckTime = {}
local timerConnection = nil

-- Функция обновления таймера
local function startTimer(checkId, duration)
    if timerConnection then
        timerConnection:Disconnect()
    end
    
    timerConnection = RunService.Heartbeat:Connect(function()
        if ScriptDestroyed then
            if timerConnection then
                timerConnection:Disconnect()
            end
            return
        end
        
        local currentTime = tick()
        local elapsed = currentTime - lastCheckTime[checkId]
        local remaining = duration - elapsed
        
        if remaining > 0 then
            StatusLabel.Text = "⏳ Wait " .. math.ceil(remaining) .. "s"
            StatusLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
        else
            if timerConnection then
                timerConnection:Disconnect()
                timerConnection = nil
            end
            StatusLabel.Text = ""
        end
    end)
end

local function checkKey(key)
    if ScriptDestroyed then return false end
    
    local hwid = getHWID()
    local checkId = key .. "_" .. hwid
    
    if activeChecks[checkId] then
        StatusLabel.Text = "⏳ Already checking..."
        StatusLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
        return false
    end
    
    local currentTime = tick()
    if lastCheckTime[checkId] and currentTime - lastCheckTime[checkId] < 3 then
        startTimer(checkId, 3)
        return false
    end
    
    activeChecks[checkId] = true
    lastCheckTime[checkId] = currentTime
    StatusLabel.Text = "Checking key..."
    StatusLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
    
    -- Принудительно обновляем данные
    loadKeys()
    loadKeysDatabase()
    if ScriptDestroyed then return false end
    
    -- Проверяем есть ли ключ в keys.txt
    local keyExists = false
    if keysCache and keysCache ~= "" then
        for line in keysCache:gmatch("[^\r\n]+") do
            local cleanLine = line:gsub("%s+", "")
            if cleanLine == key then
                keyExists = true
                break
            end
        end
    end
    
    if not keyExists then
        StatusLabel.Text = "❌ Invalid key (not in keys.txt)"
        StatusLabel.TextColor3 = Color3.fromRGB(255, 60, 60)
        activeChecks[checkId] = nil
        return false
    end
    
    -- Получаем данные ключа из базы данных
    local keyData = keysDatabase[key]
    if not keyData then

        -- Если ключ есть в keys.txt но нет в базе данных, создаем базовые данные
        keyData = {
            type = "free",
            expires = tick() + 86400, -- 24 часа
            hwid = nil,
            frozen = false
        }
    else

    end
    
    if keyData.type == "premium" and keyData.game and keyData.game ~= currentGame then
        StatusLabel.Text = currentGame == "unsupported" and "❌ Game not supported" or "❌ Wrong game"
        StatusLabel.TextColor3 = Color3.fromRGB(255, 60, 60)
        activeChecks[checkId] = nil
        return false
    end
    
    if keyData.expires and keyData.expires < tick() then
        StatusLabel.Text = "❌ Key expired"
        StatusLabel.TextColor3 = Color3.fromRGB(255, 60, 60)
        activeChecks[checkId] = nil
        return false
    end
    
    if keyData.frozen then
        StatusLabel.Text = "❌ Key is frozen"
        StatusLabel.TextColor3 = Color3.fromRGB(255, 60, 60)
        activeChecks[checkId] = nil
        return false
    end
    
    if keyData.hwid and keyData.hwid ~= hwid then
        StatusLabel.Text = "❌ HWID mismatch"
        StatusLabel.TextColor3 = Color3.fromRGB(255, 60, 60)
        activeChecks[checkId] = nil
        return false
    end
    
    if not keyData.hwid or keyData.hwid == "" then
        StatusLabel.Text = "Binding HWID..."
        
        -- Отправляем запрос на привязку и сразу получаем результат
        local bindResult = directValidation(key, hwid)
        
        if bindResult then
            StatusLabel.Text = "✅ Key accepted! Loading..."
            StatusLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
            activeChecks[checkId] = nil
            return true
        else
            StatusLabel.Text = "❌ HWID binding failed"
            StatusLabel.TextColor3 = Color3.fromRGB(255, 60, 60)
            activeChecks[checkId] = nil
            return false
        end
    else
        StatusLabel.Text = "✅ Key accepted! Loading..."
        StatusLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
        activeChecks[checkId] = nil
        return true
    end
end

local function loadScript()
    if currentGame == "yba" then
        loadstring(game:HttpGet('https://raw.githubusercontent.com/asdkfnjkhzxoiuiou34341/erio-0vzcv319423fs/refs/heads/main/yba'))()
    elseif currentGame == "99_nights" then
        loadstring(game:HttpGet('https://raw.githubusercontent.com/asdkfnjkhzxoiuiou34341/erio-0vzcv319423fs/refs/heads/main/99_nights'))()
    elseif currentGame == "blade_ball" then
        loadstring(game:HttpGet('https://raw.githubusercontent.com/asdkfnjkhzxoiuiou34341/erio-0vzcv319423fs/refs/heads/main/blade%20ball'))()
    end
end

SubmitButton.MouseButton1Click:Connect(function()
    if ScriptDestroyed then return end
    
    local key = KeyInput.Text:gsub("%s+", "")
    if key == "" then
        StatusLabel.Text = "❌ Enter key"
        StatusLabel.TextColor3 = Color3.fromRGB(255, 60, 60)
        return
    end
    
    SubmitButton.Active = false
    SubmitButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
    SubmitButton.Text = "Checking..."
    
    spawn(function()
        local success = checkKey(key)
        
        if ScriptDestroyed then return end
        
        SubmitButton.Active = true
        SubmitButton.BackgroundColor3 = Color3.fromRGB(0, 162, 255)
        SubmitButton.Text = "Check Key"
        
        if success then
            StatusLabel.Text = "✅ Loading script..."
            StatusLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
            wait(3)
            if not ScriptDestroyed then
                ScreenGui:Destroy()
                loadScript()
            end
        end
    end)
end)

KeyInput.FocusLost:Connect(function(enterPressed)
    if ScriptDestroyed then return end
    
    if enterPressed then
        local key = KeyInput.Text:gsub("%s+", "")
        if key == "" then
            StatusLabel.Text = "❌ Enter key"
            StatusLabel.TextColor3 = Color3.fromRGB(255, 60, 60)
            return
        end
        
        SubmitButton.Active = false
        SubmitButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
        SubmitButton.Text = "Checking..."
        
        spawn(function()
            local success = checkKey(key)
            
            if ScriptDestroyed then return end
            
            SubmitButton.Active = true
            SubmitButton.BackgroundColor3 = Color3.fromRGB(0, 162, 255)
            SubmitButton.Text = "Check Key"
            
            if success then
                StatusLabel.Text = "✅ Loading script..."
                StatusLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
                wait(3)
                if not ScriptDestroyed then
                    ScreenGui:Destroy()
                    loadScript()
                end
            end
        end)
    end
end)

CloseButton.MouseButton1Click:Connect(function()
    ScriptDestroyed = true
    
    if updateConnection then
        updateConnection:Disconnect()
    end
    
    if autoUpdateConnection then
        autoUpdateConnection:Disconnect()
    end
    
    if timerConnection then
        timerConnection:Disconnect()
    end
    
    activeChecks = {}
    lastCheckTime = {}
    
    ScreenGui:Destroy()
    
    keysCache = ""
    keysDatabase = {}
    
    wait(0.1)
    game:GetService("RunService").Heartbeat:Wait()
end)

local function copyBotLink()
    local botLink = "https://t.me/sskinhubot"
    
    if setclipboard then
        setclipboard(botLink)
    elseif toclipboard then
        toclipboard(botLink)
    end
    
    StatusLabel.Text = "✅ Bot link copied to clipboard!"
    StatusLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
    
    local originalColor = GetKeyButton.BackgroundColor3
    GetKeyButton.BackgroundColor3 = Color3.fromRGB(0, 200, 0)
    
    wait(0.3)
    GetKeyButton.BackgroundColor3 = originalColor
    
    wait(2)
    StatusLabel.Text = ""
end

GetKeyButton.MouseButton1Click:Connect(copyBotLink)

MainFrame.Size = UDim2.new(0, 0, 0, 0)
MainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)

local tween = TweenService:Create(MainFrame, TweenInfo.new(0.5, Enum.EasingStyle.Back), {
    Size = UDim2.new(0, 400, 0, 300),
    Position = UDim2.new(0.5, -200, 0.5, -150)
})
tween:Play()

local updateConnection
updateConnection = RunService.Heartbeat:Connect(function()
    if ScriptDestroyed or not ScreenGui.Parent then
        updateConnection:Disconnect()
        return
    end
    
    if ScreenGui.Parent ~= Players.LocalPlayer.PlayerGui then
        ScreenGui.Parent = Players.LocalPlayer.PlayerGui
    end
    
    if tick() - lastUpdate >= 2 then
        spawn(function()
            if not ScriptDestroyed then
                loadKeys()
                loadKeysDatabase()
            end
        end)
    end
end)

-- Запускаем автообновление и первоначальную загрузку
startAutoUpdate()
spawn(function()
    loadKeys()
    loadKeysDatabase()
end)
